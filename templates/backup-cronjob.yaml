{{- if .Values.backup.enabled }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "horo.fullname" . }}-backup-secrets
  labels:
    {{- include "horo.labels" . | nindent 4 }}
    app.kubernetes.io/component: backup
type: Opaque
stringData:
  AGE_PUBLIC_KEY: {{ .Values.backup.age.publicKey | quote }}
  S3_ENDPOINT: {{ .Values.backup.s3.endpoint | quote }}
  S3_REGION: {{ .Values.backup.s3.region | quote }}
  S3_BUCKET: {{ .Values.backup.s3.bucket | quote }}
  S3_ACCESS_KEY_ID: {{ .Values.backup.s3.accessKeyId | quote }}
  S3_SECRET_ACCESS_KEY: {{ .Values.backup.s3.secretAccessKey | quote }}
  S3_PREFIX: {{ .Values.backup.s3.prefix | quote }}
  DB_TYPE: {{ .Values.database.type | quote }}
  DB_HOST: {{ .Values.database.host | quote }}
  DB_NAME: {{ .Values.database.database | quote }}
  DB_USER: {{ .Values.database.user | quote }}
  DB_PASSWORD: {{ .Values.database.password | quote }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "horo.fullname" . }}-backup-scripts
  labels:
    {{- include "horo.labels" . | nindent 4 }}
    app.kubernetes.io/component: backup
data:
  backup.sh: |
    #!/bin/bash
    set -e
    
    echo "Starting database backup at $(date)"
    
    # 使用指定格式的时间戳
    TIMESTAMP=$(date '+%Y-%m-%d-%H_%M_%S')
    BACKUP_FILE="/tmp/backup-${TIMESTAMP}.sql"
    
    # 检查必要的工具是否已安装
    if ! command -v mariadb-dump &> /dev/null || ! command -v age &> /dev/null || ! command -v mc &> /dev/null; then
      echo "Installing required tools..."
      apt-get update && apt-get install -y mariadb-client age wget

      wget https://dl.min.io/client/mc/release/linux-amd64/mc -O /usr/bin/mc
      chmod +x /usr/bin/mc
    fi
    
    # 执行数据库备份
    echo "Backing up database to ${BACKUP_FILE}"
    mariadb-dump --lock-tables -h${DB_HOST} -u${DB_USER} -p${DB_PASSWORD} ${DB_NAME} > ${BACKUP_FILE}
    
    if [ $? -ne 0 ]
    then
      exit 1
    fi

    # 使用age加密备份
    echo "Encrypting backup..."
    ENCRYPTED_FILE="${BACKUP_FILE}.age"
    echo "${AGE_PUBLIC_KEY}" > /tmp/age-key.txt
    age -e -R /tmp/age-key.txt -o ${ENCRYPTED_FILE} ${BACKUP_FILE}
    
    if [ $? -ne 0 ]
    then
      exit 1
    fi

    # 上传到S3
    echo "Uploading to S3..."
    # export AWS_ACCESS_KEY_ID=${S3_ACCESS_KEY_ID}
    # export AWS_SECRET_ACCESS_KEY=${S3_SECRET_ACCESS_KEY}
    # export AWS_DEFAULT_REGION=${S3_REGION}
    export S3_BACKUP_KEY="${S3_PREFIX}backup-${TIMESTAMP}.sql.age"

    mc --config-dir /tmp/mc alias set s3 ${S3_ENDPOINT} ${S3_ACCESS_KEY_ID} ${S3_SECRET_ACCESS_KEY}
    if [ $? -ne 0 ]
    then
      exit 1
    fi

    mc --config-dir /tmp/mc cp ${ENCRYPTED_FILE} s3/${S3_BUCKET}/${S3_BACKUP_KEY}
    if [ $? -ne 0 ]
    then
      exit 1
    fi
    
    
    # 清理本地文件
    rm -f ${BACKUP_FILE} ${ENCRYPTED_FILE} /tmp/age-key.txt
    
    # 获取当前所有备份列表并保留最新的5个
    echo "Cleaning up old backups..."

    for i in $(mc --config-dir /tmp/mc  ls s3/${S3_BUCKET}/${S3_PREFIX} | awk -F' ' '{print $NF}'  | sort -r  | tail -n +6)
    do
      mc --config-dir /tmp/mc  rm s3/${S3_BUCKET}/${S3_PREFIX}${i}
      if [ $? -ne 0 ]
      then
        exit 1
      fi
    done
        
    echo "Backup completed successfully at $(date)"
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ include "horo.fullname" . }}-backup
  labels:
    {{- include "horo.labels" . | nindent 4 }}
    app.kubernetes.io/component: backup
spec:
  schedule: {{ .Values.backup.schedule | quote }}
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 3
  timeZone: "Asia/Shanghai"
  jobTemplate:
    spec:
      template:
        spec:
          {{- with .Values.global.imagePullSecrets }}
          imagePullSecrets:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          restartPolicy: OnFailure
          containers:
            - name: backup
              image: "{{ .Values.backup.image.repository }}:{{ .Values.backup.image.tag }}"
              imagePullPolicy: {{ .Values.backup.image.pullPolicy }}
              command:
                - /bin/bash
                - /scripts/backup.sh
              env:
                - name: TZ
                  value: Asia/Shanghai
              envFrom:
                - secretRef:
                    name: {{ include "horo.fullname" . }}-backup-secrets
              volumeMounts:
                - name: backup-scripts
                  mountPath: /scripts
              resources:
                requests:
                  cpu: 100m
                  memory: 256Mi
                limits:
                  cpu: 500m
                  memory: 512Mi
          volumes:
            - name: backup-scripts
              configMap:
                name: {{ include "horo.fullname" . }}-backup-scripts
                defaultMode: 0755
{{- end }} 